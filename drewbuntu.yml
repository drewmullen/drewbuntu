---
- hosts: localhost
  connection: local
  become: true
  vars:
    tf_version: 0.12.0-beta1
    packer_version: 1.3.5
  tasks:
    - name: install packages
      apt:
         state: present
         name: "{{ item }}"
         update_cache: true
      with_items:
        - "vim"
        - "apt-transport-https"
        - "ca-certificates"
        - "curl"
        - "gnupg2"
        - "software-properties-common"
        - groff

    - name: add custom gpg keys
      apt_key:
         url: "{{ item }}"
      with_items:
        - https://download.docker.com/linux/debian/gpg
        - https://packages.microsoft.com/keys/microsoft.asc
    
    - name: add custom repos
      apt_repository:
         repo: "{{ item }}"
      with_items:
        - deb [arch=amd64] https://download.docker.com/linux/debian {{ansible_distribution_release}} stable
        - deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main

    - name: install special packages
      apt:
         name: "{{ item }}"
         update_cache: true
      with_items:
        - docker-ce
        - code

    - name: add executing user to docker group
      user:
        name: "{{ ansible_env.SUDO_USER }}"
        group: "docker"
        append: true

    - name: "install terraform ver: {{ tf_version }}"
      unarchive:
        src: "https://releases.hashicorp.com/terraform/{{ tf_version }}/terraform_{{ tf_version }}_linux_amd64.zip"
        dest: /usr/local/bin
        owner: root
        group: root
        mode: 0777
        remote_src: true

    - name: "install packer ver: {{ packer_version }}"
      unarchive:
        src: "https://releases.hashicorp.com/packer/{{ packer_version }}/packer_{{ packer_version }}_linux_amd64.zip"
        dest: /usr/local/bin
        owner: root
        group: root
        mode: 0777
        remote_src: true

    - name: 'Install Python PIP'
      tags: 'aws-cli'
      become: 'yes'
      apt: >
        pkg=python-pip
        state=latest
    - name: 'Install AWS CLI'
      tags: 'aws-cli'
      become: 'yes'
      pip: >
        name=awscli
        state=latest
